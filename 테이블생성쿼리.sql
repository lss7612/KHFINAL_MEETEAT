-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_GRADE
(
    user_grade    NUMBER          NOT NULL, 
    grade_name    VARCHAR2(20)    NULL, 
    CONSTRAINT TB2_GRADE_PK PRIMARY KEY (user_grade)
)
/
/*
CREATE SEQUENCE TB2_GRADE_SEQ
START WITH 0
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_GRADE_AI_TRG
BEFORE INSERT ON TB2_GRADE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_GRADE_SEQ.NEXTVAL
    INTO :NEW.user_grade
    FROM DUAL;
END;
/
*/
--DROP TRIGGER TB2_GRADE_AI_TRG;
/

--DROP SEQUENCE TB2_GRADE_SEQ;
/

COMMENT ON COLUMN TB2_GRADE.user_grade IS '회원등급분류번호'
/

COMMENT ON COLUMN TB2_GRADE.grade_name IS '회원등급이름'
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_USER
(
    user_no          NUMBER           NOT NULL, 
    user_id          VARCHAR2(20)     NOT NULL, 
    user_pw          VARCHAR2(20)     NOT NULL, 
    user_nick        VARCHAR2(20)     NOT NULL, 
    user_gender      VARCHAR2(10)      NOT NULL, 
    user_age         VARCHAR2(100)    NOT NULL, 
    user_blockcnt    NUMBER           NOT NULL, 
    user_email       VARCHAR2(100)    NOT NULL, 
    user_profile     VARCHAR2(100)    NOT NULL, 
    user_grade       NUMBER           NOT NULL, 
    CONSTRAINT TB2_USER_PK PRIMARY KEY (user_no)
)
/

CREATE SEQUENCE TB2_USER_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_USER_AI_TRG
BEFORE INSERT ON TB2_USER 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_USER_SEQ.NEXTVAL
    INTO :NEW.user_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_USER_AI_TRG;
/

--DROP SEQUENCE TB2_USER_SEQ;
/

COMMENT ON COLUMN TB2_USER.user_no IS '유저번호'
/

COMMENT ON COLUMN TB2_USER.user_id IS '아이디'
/

COMMENT ON COLUMN TB2_USER.user_pw IS '비밀번호'
/

COMMENT ON COLUMN TB2_USER.user_nick IS '닉네임'
/

COMMENT ON COLUMN TB2_USER.user_gender IS '성별'
/

COMMENT ON COLUMN TB2_USER.user_age IS '나이'
/

COMMENT ON COLUMN TB2_USER.user_blockcnt IS '누적신고횟수'
/

COMMENT ON COLUMN TB2_USER.user_email IS '메일'
/

COMMENT ON COLUMN TB2_USER.user_profile IS '프로필사진'
/

COMMENT ON COLUMN TB2_USER.user_grade IS '유저등급'
/

ALTER TABLE TB2_USER
    ADD CONSTRAINT FK_TB2_USER_user_grade_TB2_GRA FOREIGN KEY (user_grade)
        REFERENCES TB2_GRADE (user_grade)
/



-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_RESULTREPORTREASON
(
    report_result            NUMBER           NOT NULL, 
    report_result_content    VARCHAR2(100)    NOT NULL, 
    CONSTRAINT TB2_RESULTREPORTREASON_PK PRIMARY KEY (report_result)
)
/

CREATE SEQUENCE TB2_RESULTREPORTREASON_SEQ
START WITH 1
INCREMENT BY 1;
/
CREATE OR REPLACE TRIGGER TB2_RESULTREPORTREASON_AI_TRG
BEFORE INSERT ON TB2_RESULTREPORTREASON 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_RESULTREPORTREASON_SEQ.NEXTVAL
    INTO :NEW.report_result
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_RESULTREPORTREASON_AI_TRG;
/

--DROP SEQUENCE TB2_RESULTREPORTREASON_SEQ;
/

COMMENT ON COLUMN TB2_RESULTREPORTREASON.report_result IS '신고 처리번호'
/

COMMENT ON COLUMN TB2_RESULTREPORTREASON.report_result_content IS '신고 처리내용'
/




-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_BOARDCLASS
(
    board_no      NUMBER          NOT NULL, 
    board_name    VARCHAR2(50)    NOT NULL, 
    CONSTRAINT TB2_BOARDCLASS_PK PRIMARY KEY (board_no)
)
/

COMMENT ON TABLE TB2_BOARDCLASS IS '게시판분류'
/

COMMENT ON COLUMN TB2_BOARDCLASS.board_no IS '게시판번호'
/

COMMENT ON COLUMN TB2_BOARDCLASS.board_name IS '게시판이름'
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_BOARD
(
    article_no         NUMBER            NOT NULL, 
    article_title      VARCHAR2(120)     NOT NULL, 
    article_content    VARCHAR2(3000)    NOT NULL, 
    board_no           NUMBER            NOT NULL, 
    party_location     VARCHAR2(20)      NULL, 
    user_no            NUMBER            NOT NULL, 
    create_date        DATE              NOT NULL, 
    revision_date      DATE              NULL, 
    file_no            NUMBER            NULL, 
    is_delete          NUMBER            NOT NULL, 
    category           VARCHAR2(20)      NULL, 
    article_hit        NUMBER            NOT NULL, 
    post_group         NUMBER            NULL, 
    post_step          NUMBER            NULL, 
    post_indent        NUMBER            NULL, 
    meet_time          VARCHAR2(100)     NULL, 
    article_pw         VARCHAR2(100)     NULL, 
    terminate_date     DATE              NULL, 
    mate_list          VARCHAR2(100)     NULL, 
    CONSTRAINT TB2_BOARD_PK PRIMARY KEY (article_no, board_no)
)
/

CREATE SEQUENCE TB2_BOARD_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_BOARD_AI_TRG
BEFORE INSERT ON TB2_BOARD 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_BOARD_SEQ.NEXTVAL
    INTO :NEW.article_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_BOARD_AI_TRG;
/

--DROP SEQUENCE TB2_BOARD_SEQ;
/

COMMENT ON TABLE TB2_BOARD IS '모집게시판'
/

COMMENT ON COLUMN TB2_BOARD.article_no IS '글번호'
/

COMMENT ON COLUMN TB2_BOARD.article_title IS '글제목'
/

COMMENT ON COLUMN TB2_BOARD.article_content IS '글내용'
/

COMMENT ON COLUMN TB2_BOARD.board_no IS '게시판번호'
/

COMMENT ON COLUMN TB2_BOARD.party_location IS '지역'
/

COMMENT ON COLUMN TB2_BOARD.user_no IS '글쓴이(회원테이블참조'
/

COMMENT ON COLUMN TB2_BOARD.create_date IS '최초작성시간'
/

COMMENT ON COLUMN TB2_BOARD.revision_date IS '최종수정시간'
/

COMMENT ON COLUMN TB2_BOARD.file_no IS '첨부파일경로'
/

COMMENT ON COLUMN TB2_BOARD.is_delete IS '삭제여부'
/

COMMENT ON COLUMN TB2_BOARD.category IS '카테고리'
/

COMMENT ON COLUMN TB2_BOARD.article_hit IS '조회수'
/

COMMENT ON COLUMN TB2_BOARD.post_group IS '게시글 그룹번호'
/

COMMENT ON COLUMN TB2_BOARD.post_step IS '순서번호'
/

COMMENT ON COLUMN TB2_BOARD.post_indent IS '들여쓰기 번호'
/

COMMENT ON COLUMN TB2_BOARD.meet_time IS '만나는시간'
/

COMMENT ON COLUMN TB2_BOARD.article_pw IS '게시글 비밀번호'
/

COMMENT ON COLUMN TB2_BOARD.terminate_date IS '완료날짜'
/

COMMENT ON COLUMN TB2_BOARD.mate_list IS '참여자리스트'
/

ALTER TABLE TB2_BOARD
    ADD CONSTRAINT FK_TB2_BOARD_board_no_TB2_BOAR FOREIGN KEY (board_no)
        REFERENCES TB2_BOARDCLASS (board_no)
/

ALTER TABLE TB2_BOARD
    ADD CONSTRAINT FK_TB2_BOARD_user_no_TB2_USER_ FOREIGN KEY (user_no)
        REFERENCES TB2_USER (user_no)
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_CHATTING
(
    chatting_no    NUMBER    NOT NULL, 
    user_total     NUMBER    NOT NULL, 
    CONSTRAINT TB2_CHATTING_PK PRIMARY KEY (chatting_no)
)
/

CREATE SEQUENCE TB2_CHATTING_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_CHATTING_AI_TRG
BEFORE INSERT ON TB2_CHATTING 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_CHATTING_SEQ.NEXTVAL
    INTO :NEW.chatting_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_CHATTING_AI_TRG;
/

--DROP SEQUENCE TB2_CHATTING_SEQ;
/

COMMENT ON TABLE TB2_CHATTING IS '채팅'
/

COMMENT ON COLUMN TB2_CHATTING.chatting_no IS '채팅방번호'
/

COMMENT ON COLUMN TB2_CHATTING.user_total IS '인원'
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_REPORTREASON
(
    reason_no         NUMBER           NOT NULL, 
    reason_content    VARCHAR2(100)    NOT NULL, 
    CONSTRAINT TB2_REPORTREASON_PK PRIMARY KEY (reason_no)
)
/

CREATE SEQUENCE TB2_REPORTREASON_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_REPORTREASON_AI_TRG
BEFORE INSERT ON TB2_REPORTREASON 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_REPORTREASON_SEQ.NEXTVAL
    INTO :NEW.reason_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_REPORTREASON_AI_TRG;
/

--DROP SEQUENCE TB2_REPORTREASON_SEQ;
/

COMMENT ON TABLE TB2_REPORTREASON IS '회원신고사유'
/

COMMENT ON COLUMN TB2_REPORTREASON.reason_no IS '사유번호'
/

COMMENT ON COLUMN TB2_REPORTREASON.reason_content IS '신고 사유'
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_PAYMENT
(
    pay_no        NUMBER         NOT NULL, 
    user_no       NUMBER         NOT NULL, 
    pay_date      DATE           NULL, 
    price         NUMBER         NULL, 
    pay_status    VARCHAR(20)    NULL, 
    CONSTRAINT TB2_PAYMENT_PK PRIMARY KEY (pay_no)
)
/

CREATE SEQUENCE TB2_PAYMENT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_PAYMENT_AI_TRG
BEFORE INSERT ON TB2_PAYMENT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_PAYMENT_SEQ.NEXTVAL
    INTO :NEW.pay_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_PAYMENT_AI_TRG;
/

--DROP SEQUENCE TB2_PAYMENT_SEQ;
/

COMMENT ON COLUMN TB2_PAYMENT.pay_no IS '결제 번호'
/

COMMENT ON COLUMN TB2_PAYMENT.user_no IS '회원 넘버'
/

COMMENT ON COLUMN TB2_PAYMENT.pay_date IS '결제일'
/

COMMENT ON COLUMN TB2_PAYMENT.price IS '결제 가격'
/

COMMENT ON COLUMN TB2_PAYMENT.pay_status IS '결제 상태'
/

ALTER TABLE TB2_PAYMENT
    ADD CONSTRAINT FK_TB2_PAYMENT_user_no_TB2_USE FOREIGN KEY (user_no)
        REFERENCES TB2_USER (user_no)
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_CHATTINGUSER
(
    index          NUMBER    NOT NULL, 
    chatting_no    NUMBER    NOT NULL, 
    user_no        NUMBER    NOT NULL, 
    CONSTRAINT TB2_CHATTINGUSER_PK PRIMARY KEY (index)
)
/

CREATE SEQUENCE TB2_CHATTINGUSER_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_CHATTINGUSER_AI_TRG
BEFORE INSERT ON TB2_CHATTINGUSER 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_CHATTINGUSER_SEQ.NEXTVAL
    INTO :NEW.index
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_CHATTINGUSER_AI_TRG;
/

--DROP SEQUENCE TB2_CHATTINGUSER_SEQ;
/

COMMENT ON TABLE TB2_CHATTINGUSER IS '채팅참여자'
/

COMMENT ON COLUMN TB2_CHATTINGUSER.index IS '참여자목록'
/

COMMENT ON COLUMN TB2_CHATTINGUSER.chatting_no IS '채팅방번호'
/

COMMENT ON COLUMN TB2_CHATTINGUSER.user_no IS '회원번호'
/

ALTER TABLE TB2_CHATTINGUSER
    ADD CONSTRAINT FK_TB2_CHATTINGUSER_chatting_n FOREIGN KEY (chatting_no)
        REFERENCES TB2_CHATTING (chatting_no)
/

ALTER TABLE TB2_CHATTINGUSER
    ADD CONSTRAINT FK_TB2_CHATTINGUSER_user_no_TB FOREIGN KEY (user_no)
        REFERENCES TB2_USER (user_no)
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_CHATTINGCONTENT
(
    chatting_no    NUMBER          NOT NULL, 
    msg_no         VARCHAR2(20)    NOT NULL, 
    user_no        NUMBER          NOT NULL, 
    msg_content    VARCHAR2(20)    NOT NULL, 
    msg_date       DATE            NOT NULL, 
    CONSTRAINT TB2_CHATTINGCONTENT_PK PRIMARY KEY (chatting_no)
)
/

CREATE SEQUENCE TB2_CHATTINGCONTENT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_CHATTINGCONTENT_AI_TRG
BEFORE INSERT ON TB2_CHATTINGCONTENT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_CHATTINGCONTENT_SEQ.NEXTVAL
    INTO :NEW.chatting_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_CHATTINGCONTENT_AI_TRG;
/

--DROP SEQUENCE TB2_CHATTINGCONTENT_SEQ;
/

COMMENT ON TABLE TB2_CHATTINGCONTENT IS '채팅내용'
/

COMMENT ON COLUMN TB2_CHATTINGCONTENT.chatting_no IS '채팅번호'
/

COMMENT ON COLUMN TB2_CHATTINGCONTENT.msg_no IS '메시지번호'
/

COMMENT ON COLUMN TB2_CHATTINGCONTENT.user_no IS '작성자'
/

COMMENT ON COLUMN TB2_CHATTINGCONTENT.msg_content IS '작성내용'
/

COMMENT ON COLUMN TB2_CHATTINGCONTENT.msg_date IS '작성시간'
/

ALTER TABLE TB2_CHATTINGCONTENT
    ADD CONSTRAINT FK_TB2_CHATTINGCONTENT_chattin FOREIGN KEY (chatting_no)
        REFERENCES TB2_CHATTING (chatting_no)
/

ALTER TABLE TB2_CHATTINGCONTENT
    ADD CONSTRAINT FK_TB2_CHATTINGCONTENT_user_no FOREIGN KEY (user_no)
        REFERENCES TB2_USER (user_no)
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_USERREPORT
(
    report_no         NUMBER           NOT NULL, 
    user_no           NUMBER           NOT NULL, 
    report_time       DATE             NOT NULL, 
    reason_no         NUMBER           NOT NULL, 
    report_content    VARCHAR2(100)    NULL, 
    board_url         VARCHAR2(20)     NULL, 
    CONSTRAINT TB2_USERREPORT_PK PRIMARY KEY (report_no)
)
/

CREATE SEQUENCE TB2_USERREPORT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_USERREPORT_AI_TRG
BEFORE INSERT ON TB2_USERREPORT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_USERREPORT_SEQ.NEXTVAL
    INTO :NEW.report_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_USERREPORT_AI_TRG;
/

--DROP SEQUENCE TB2_USERREPORT_SEQ;
/

COMMENT ON TABLE TB2_USERREPORT IS '신고내역'
/

COMMENT ON COLUMN TB2_USERREPORT.report_no IS '신고번호'
/

COMMENT ON COLUMN TB2_USERREPORT.user_no IS '회원번호'
/

COMMENT ON COLUMN TB2_USERREPORT.report_time IS '신고시각'
/

COMMENT ON COLUMN TB2_USERREPORT.reason_no IS '신고 사유'
/

COMMENT ON COLUMN TB2_USERREPORT.report_content IS '신고 내용'
/

COMMENT ON COLUMN TB2_USERREPORT.board_url IS '게시글URL'
/

ALTER TABLE TB2_USERREPORT
    ADD CONSTRAINT FK_TB2_USERREPORT_reason_no_TB FOREIGN KEY (reason_no)
        REFERENCES TB2_REPORTREASON (reason_no)
/

ALTER TABLE TB2_USERREPORT
    ADD CONSTRAINT FK_TB2_USERREPORT_user_no_TB2_ FOREIGN KEY (user_no)
        REFERENCES TB2_USER (user_no)
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_RESULTREPORT
(
    report_result_no           NUMBER    NOT NULL, 
    user_no                    NUMBER    NOT NULL, 
    report_result_date         DATE      NOT NULL, 
    report_result_detail_no    NUMBER    NOT NULL, 
    CONSTRAINT TB2_RESULTREPORT_PK PRIMARY KEY (report_result_no)
)
/

CREATE SEQUENCE TB2_RESULTREPORT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_RESULTREPORT_AI_TRG
BEFORE INSERT ON TB2_RESULTREPORT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_RESULTREPORT_SEQ.NEXTVAL
    INTO :NEW.report_result_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_RESULTREPORT_AI_TRG;
/

--DROP SEQUENCE TB2_RESULTREPORT_SEQ;
/

COMMENT ON TABLE TB2_RESULTREPORT IS '회원 신고 처리'
/

COMMENT ON COLUMN TB2_RESULTREPORT.report_result_no IS '처리번호'
/

COMMENT ON COLUMN TB2_RESULTREPORT.user_no IS '회원번호'
/

COMMENT ON COLUMN TB2_RESULTREPORT.report_result_date IS '처리일시'
/

COMMENT ON COLUMN TB2_RESULTREPORT.report_result_detail_no IS '신고처리번호'
/

ALTER TABLE TB2_RESULTREPORT
    ADD CONSTRAINT FK_TB2_RESULTREPORT_user_no_TB FOREIGN KEY (user_no)
        REFERENCES TB2_USER (user_no)
/

ALTER TABLE TB2_RESULTREPORT
    ADD CONSTRAINT FK_TB2_RESULTREPORT_report_res FOREIGN KEY (report_result_detail_no)
        REFERENCES TB2_RESULTREPORTREASON (report_result)
/

-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_COMMENT
(
    comment_no          NUMBER            NOT NULL, 
    article_no          NUMBER            NOT NULL, 
    board_no            NUMBER            NOT NULL, 
    comment_content     VARCHAR2(2000)    NOT NULL, 
    user_no             NUMBER            NOT NULL, 
    comment_order       NUMBER            NOT NULL, 
    comment_originno    NUMBER            NULL, 
    create_date         DATE              NOT NULL, 
    revision_date       DATE              NULL, 
    is_delete           NUMBER            NOT NULL, 
    CONSTRAINT TB2_COMMENT_PK PRIMARY KEY (comment_no)
)
/

CREATE SEQUENCE TB2_COMMENT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_COMMENT_AI_TRG
BEFORE INSERT ON TB2_COMMENT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_COMMENT_SEQ.NEXTVAL
    INTO :NEW.comment_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_COMMENT_AI_TRG;
/

--DROP SEQUENCE TB2_COMMENT_SEQ;
/

COMMENT ON TABLE TB2_COMMENT IS '댓글'
/

COMMENT ON COLUMN TB2_COMMENT.comment_no IS '댓글번호'
/

COMMENT ON COLUMN TB2_COMMENT.article_no IS '글번호'
/

COMMENT ON COLUMN TB2_COMMENT.board_no IS '게시판번호'
/

COMMENT ON COLUMN TB2_COMMENT.comment_content IS '댓글내용'
/

COMMENT ON COLUMN TB2_COMMENT.user_no IS '글쓴이(회원테이블참조'
/

COMMENT ON COLUMN TB2_COMMENT.comment_order IS '대댓글순서(원본이0'
/

COMMENT ON COLUMN TB2_COMMENT.comment_originno IS '참조댓글번호'
/

COMMENT ON COLUMN TB2_COMMENT.create_date IS '최초작성시간'
/

COMMENT ON COLUMN TB2_COMMENT.revision_date IS '최종수정시간'
/

COMMENT ON COLUMN TB2_COMMENT.is_delete IS '삭제여부'
/

ALTER TABLE TB2_COMMENT
    ADD CONSTRAINT FK_TB2_COMMENT_article_no_TB2_ FOREIGN KEY (article_no, board_no)
        REFERENCES TB2_BOARD (article_no, board_no)
/

ALTER TABLE TB2_COMMENT
    ADD CONSTRAINT FK_TB2_COMMENT_user_no_TB2_USE FOREIGN KEY (user_no)
        REFERENCES TB2_USER (user_no)
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_FILE
(
    file_no            NUMBER           NOT NULL, 
    file_originname    VARCHAR2(500)    NOT NULL, 
    file_storedname    VARCHAR2(200)    NOT NULL, 
    CONSTRAINT TB2_FILE_PK PRIMARY KEY (file_no)
)
/

CREATE SEQUENCE TB2_FILE_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_FILE_AI_TRG
BEFORE INSERT ON TB2_FILE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_FILE_SEQ.NEXTVAL
    INTO :NEW.file_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_FILE_AI_TRG;
/

--DROP SEQUENCE TB2_FILE_SEQ;
/

COMMENT ON TABLE TB2_FILE IS '게시판 첨부파일'
/

COMMENT ON COLUMN TB2_FILE.file_no IS '첨부파일 번호'
/

COMMENT ON COLUMN TB2_FILE.file_originname IS '오리지날 파일명'
/

COMMENT ON COLUMN TB2_FILE.file_storedname IS '스토어드 파일명'
/

ALTER TABLE TB2_FILE
    ADD CONSTRAINT FK_TB2_FILE_file_no_TB2_BOARD_ FOREIGN KEY (file_no)
        REFERENCES TB2_BOARD (file_no)
/


-- TB2_GRADE Table Create SQL
CREATE TABLE TB2_RECOMMEND
(
    article_no    NUMBER          NOT NULL, 
    board_no      NUMBER          NULL, 
    user_id       VARCHAR2(20)    NULL, 
    CONSTRAINT TB2_RECOMMEND_PK PRIMARY KEY (article_no, board_no)
)
/

CREATE SEQUENCE TB2_RECOMMEND_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER TB2_RECOMMEND_AI_TRG
BEFORE INSERT ON TB2_RECOMMEND 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB2_RECOMMEND_SEQ.NEXTVAL
    INTO :NEW.article_no
    FROM DUAL;
END;
/

--DROP TRIGGER TB2_RECOMMEND_AI_TRG;
/

--DROP SEQUENCE TB2_RECOMMEND_SEQ;
/

COMMENT ON COLUMN TB2_RECOMMEND.article_no IS '게시글번호'
/

COMMENT ON COLUMN TB2_RECOMMEND.board_no IS '게시판분류번호'
/

COMMENT ON COLUMN TB2_RECOMMEND.user_id IS '아이디'
/

ALTER TABLE TB2_RECOMMEND
    ADD CONSTRAINT FK_TB2_RECOMMEND_article_no_TB FOREIGN KEY (article_no, board_no)
        REFERENCES TB2_BOARD (article_no, board_no)
/

ALTER TABLE TB2_RECOMMEND
    ADD CONSTRAINT FK_TB2_RECOMMEND_user_id_TB2_U FOREIGN KEY (user_id)
        REFERENCES TB2_USER (user_id)
/


