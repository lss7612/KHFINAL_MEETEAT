<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="meeteat.dao.matefind.face.MateFindDao">


	<resultMap type="meeteat.dto.user.User" id="UserJoin">
		<result column="user_no" property="user_no"/>
		<result column="user_id" property="user_id"/>
		<result column="user_nick" property="user_nick"/>
		<result column="user_gender" property="user_gender"/>
		<result column="user_age" property="user_age"/>
		<result column="user_blockcnt" property="user_blockcnt"/>
		<result column="user_email" property="user_email"/>
		<result column="user_profileorigin" property="user_profileorigin"/>
		<result column="user_profilestored" property="user_profilestored"/>
		<result column="user_grade" property="user_grade"/>
	</resultMap>


	<resultMap type="meeteat.dto.mateFindBoard.MateFindBoard" id="MateFindBoard">
		<result column="article_no" property="article_no"/>
		<result column="article_title" property="article_title"/>
		<result column="article_content" property="article_content"/>
		<result column="board_no" property="board_no"/>
		<result column="party_location" property="party_location"/>
		<result column="user_no" property="user_no"/>
		<result column="category" property="category"/>
		<result column="meet_time" property="meet_time"/>
		<result column="mate_list" property="mate_list"/>
	</resultMap>
	
	<resultMap type="meeteat.dto.mateFindBoard.Recommend" id="Recommend">
		<result column="user_no" property="user_no"/>
		<result column="article_no" property="article_no"/>
		<result column="board_no" property="board_no"/>
	</resultMap>
	
	<resultMap type="meeteat.dto.mateFindBoard.MateFindBoard" id="MateFindBoardJoin">
		<result column="article_no" property="article_no"/>
		<result column="article_title" property="article_title"/>
		<result column="article_content" property="article_content"/>
		<result column="article_hit" property="article_hit"/>
		<result column="board_no" property="board_no"/>
		<result column="party_location" property="party_location"/>
		<result column="user_no" property="user_no"/>
		<result column="category" property="category"/>
		<result column="meet_time" property="meet_time"/>
		<result column="mate_list" property="mate_list"/>
		<collection resultMap="UserJoin" property="user"/>
		<collection resultMap="Recommend" property="recommend"/>
	</resultMap>

	<select id="selectList" resultType="meeteat.dto.mateFindBoard.MateFindBoard">
		SELECT * FROM tb_board2
		WHERE board_no = 2
			AND is_delete = 0
		ORDER BY article_no DESC
	</select>
	
	<sql id="selectMateFind">
		SELECT 
			mf.article_no			as article_no
			, mf.article_title		as article_title
			, mf.article_content	as article_content
			, mf.board_no			as board_no
			, mf.party_location		as party_location
			, mf.user_no			as user_no
			, mf.category			as category
			, mf.meet_time			as meet_time
			, mf.mate_list			as mate_list
			, u.user_id				as user_id
			, u.user_nick			as user_nick
			, u.user_profilestored	as user_profilestored
		FROM tb_board2 mf
			JOIN tb_user2 u
				ON u.user_no = mf.user_no
			WHERE mf.board_no = 2
				AND is_delete = 0
		ORDER BY article_no DESC
	</sql>
	
	<sql id="selectRownum">
		SELECT
			rownum rnum, B.*
		FROM (
			<include refid="selectMateFind" />
		) B
		ORDER BY rnum
	</sql>
	
	<select id="selectPagingList" parameterType="meeteat.dto.mateFindBoard.Paging" resultMap="MateFindBoardJoin">
		SELECT * FROM (
			<include refid="selectRownum" />
		) R
		<where>
			rnum BETWEEN #{startNo } AND #{endNo }
		</where>
	</select>
	
	<select id="filterList"  resultMap="MateFindBoardJoin">
		SELECT 
			mf.article_no			as article_no
			, mf.article_title		as article_title
			, mf.article_content	as article_content
			, mf.board_no			as board_no
			, mf.party_location		as party_location
			, mf.user_no			as user_no
			, mf.category			as category
			, mf.meet_time			as meet_time
			, mf.mate_list			as mate_list
			, u.user_id				as user_id
			, u.user_nick			as user_nick
			, u.user_profilestored	as user_profilestored
		FROM tb_board2 mf
			JOIN tb_user2 u
				ON u.user_no = mf.user_no
			WHERE mf.board_no = 2
				AND is_delete = 0
			<if test='!party_location.equals("")'>
				AND SUBSTR(party_location, 0, INSTR(party_location, ' ', 1, 1) - 1) = #{party_location }
			</if>
			<if test='!meet_time.equals("")'>
				AND meet_time = #{meet_time }
			</if>
			<if test='!category.equals("")'>
				AND category = #{category }
			</if>
		ORDER BY article_no DESC
	</select>
	
	<select id="filterListPaging" parameterType="hashmap" resultMap="MateFindBoardJoin">
		SELECT * FROM (
			SELECT
				rownum rnum, B.*
			FROM (
				SELECT 
					mf.article_no			as article_no
					, mf.article_title		as article_title
					, mf.article_content	as article_content
					, mf.board_no			as board_no
					, mf.party_location		as party_location
					, mf.user_no			as user_no
					, mf.category			as category
					, mf.meet_time			as meet_time
					, mf.mate_list			as mate_list
					, u.user_id				as user_id
					, u.user_nick			as user_nick
					, u.user_profilestored	as user_profilestored
				FROM tb_board2 mf
					JOIN tb_user2 u
						ON u.user_no = mf.user_no
					WHERE mf.board_no = 2
						AND is_delete = 0
						<if test='!party_location.equals("")'>
							AND SUBSTR(party_location, 0, INSTR(party_location, ' ', 1, 1) - 1) = #{party_location }
						</if>
						<if test='!meet_time.equals("")'>
							AND meet_time = #{meet_time }
						</if>
						<if test='!category.equals("")'>
							AND category = #{category }
						</if>
				ORDER BY article_no DESC
			) B
			ORDER BY rnum
		) R
		<where>
			rnum BETWEEN #{startNo } AND #{endNo }
		</where>
	</select>
	
	
	<select id="selectCntAll" resultType="int">
		SELECT count(*) FROM (
			<include refid="selectMateFind" />
		) CNT
	</select>
	
	
	<select id="selectByArticleNo" parameterType="meeteat.dto.mateFindBoard.MateFindBoard" resultType="meeteat.dto.mateFindBoard.MateFindBoard">
		SELECT 
			article_no
			, article_title
			, article_content
			, article_hit
			, board_no
			, party_location
			, user_no
			, category
<!-- 			, meet_time -->
			, TO_CHAR(meet_time, 'YYYY-MM-DD HH24:MI') as meet_time
<!-- 			, TO_CHAR(terminate_date, 'YYYY-MM-DD HH24:MI') as terminate_date -->
			, mate_list
		FROM tb_board2
		WHERE board_no = 2
			AND article_no = #{article_no }
	</select>

<!-- 	<select id="selectByArticleNo" parameterType="meeteat.dto.mateFindBoard.MateFindBoard" resultType="meeteat.dto.mateFindBoard.MateFindBoard"> -->
<!-- 		SELECT  -->
<!-- 			* -->
<!-- 		FROM tb_board2 -->
<!-- 		WHERE board_no = 2 -->
<!-- 			AND article_no = #{article_no } -->
<!-- 	</select> -->
	
	<update id="updateHit" parameterType="meeteat.dto.mateFindBoard.MateFindBoard">
		UPDATE tb_board2
		SET article_hit = article_hit + 1
		WHERE board_no = 2
			AND article_no = #{article_no }
	</update>
	
	<update id="updateMateFindBoard" parameterType="meeteat.dto.mateFindBoard.MateFindBoard">
		UPDATE tb_board2
		SET article_title = #{article_title }
			, article_content = #{article_content }
			, party_location = #{party_location }
			, category = #{category }
			, meet_time = TO_DATE(#{meet_time}, 'YYYY-MM-DD HH24MI')
			, mate_list = #{mate_list}
		WHERE board_no = 2
			AND article_no = #{article_no }
	</update>
	
	<update id="mateFindDelete" parameterType="meeteat.dto.mateFindBoard.MateFindBoard">
		UPDATE tb_board2
		SET is_delete = 1
		WHERE board_no = 2
			AND article_no = #{article_no }
	</update>
	
	<insert id="write" parameterType="meeteat.dto.mateFindBoard.MateFindBoard">
		INSERT INTO tb_board2 (article_no
					, article_title
					, article_content
					, board_no
					, party_location
					, user_no
					, category
					, meet_time
					, terminate_date
					, mate_list )
		VALUES (TB_BOARD_SEQ.nextval
				, #{article_title}
				, #{article_content}
				, 2
				, #{party_location}
				, #{user_no}
				, #{category}
				, TO_DATE(#{meet_time}, 'YYYY-MM-DD HH24MI')
				, TO_DATE(#{meet_time}, 'YYYY-MM-DD HH24MI')
				, #{mate_list} )
	</insert>


	
	<select id="selectUserByMateFind" parameterType="meeteat.dto.mateFindBoard.MateFindBoard" resultMap="MateFindBoard">
		SELECT 
			*
		FROM tb_board2 mf
			JOIN tb_user2 u
				ON u.user_no = mf.user_no
			WHERE mf.board_no = 2
				AND mf.article_no = #{article_no}
	</select>
	
	<select id="selectListWithUser" resultMap="MateFindBoardJoin">
		SELECT 
			mf.article_no			as article_no
			, mf.article_title		as article_title
			, mf.article_content	as article_content
			, mf.board_no			as board_no
			, mf.party_location		as party_location
			, mf.user_no			as user_no
			, mf.category			as category
			, mf.meet_time			as meet_time
			, mf.mate_list			as mate_list
			, u.user_id				as user_id
			, u.user_nick			as user_nick
			, u.user_profilestored	as user_profilestored
		FROM tb_board2 mf
			JOIN tb_user2 u
				ON u.user_no = mf.user_no
			WHERE mf.board_no = 2
				AND is_delete = 0
		ORDER BY article_no DESC
	</select>
	
	<select id="attendUserInfo" parameterType="meeteat.dto.mateFindBoard.MateFindBoard" resultMap="MateFindBoardJoin">
		SELECT 
		    r.user_no
		    , u.user_id
		    , u.user_nick
		    , u.user_profilestored
		FROM tb_board2 mf
		left JOIN tb_recommend2 r
		    ON mf.article_no = r.article_no
		left JOIN tb_user2 u
		    ON u.user_no = r.user_no
		WHERE r.board_no = 2
			AND r.article_no = #{article_no}
	</select>

	<select id="attendeeCount" parameterType="meeteat.dto.mateFindBoard.Recommend" resultType="int">
		SELECT count(*) FROM tb_recommend2
		WHERE board_no = 2
			AND article_no = #{article_no }
	</select>
	
	
	
		
<!-- 	<select id=""> -->
<!-- 	SELECT * FROM TB_BOARD2 -->
<!-- 		WHERE board_no = 2 -->
<!-- 		<choose> -->
<!-- 			<when test=""> -->
			
<!-- 			</when> -->
<!-- 		</choose> -->
<!-- 			AND SUBSTR(party_location, 0, INSTR(party_location, ' ', 1, 1) - 1) = #{party_location } -->
			
<!-- 	</select> -->



<!-- TB_Recommend -->

	<update id="insertAttend" parameterType="meeteat.dto.mateFindBoard.Recommend">
		INSERT INTO tb_recommend2 (article_no, board_no, user_no)
		VALUES (#{article_no}, #{board_no}, #{user_no})
	</update>	
	
	<delete id="deleteAttend" parameterType="meeteat.dto.mateFindBoard.Recommend">
		DELETE FROM tb_recommend2
		WHERE user_no = #{user_no}
			AND board_no = 2
			AND article_no = #{article_no }
	</delete>

	<select id="selectAttend" parameterType="meeteat.dto.mateFindBoard.Recommend" resultType="int">
		SELECT count(*) FROM tb_recommend2
		WHERE user_no = #{user_no}
			AND board_no = #{board_no }
			AND article_no = #{article_no }
	</select>
	
	<select id="attendeeList" parameterType="meeteat.dto.mateFindBoard.Recommend" resultType="meeteat.dto.mateFindBoard.Recommend">
		SELECT user_no FROM tb_recommend2
		WHERE board_no = 2
			AND article_no = #{article_no}
	</select>
	
	

<!-- //TB_Recommend 끝 -->

</mapper>
